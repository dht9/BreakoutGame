Breakout Game — Sprint 1: Plan
David Tran (dht9)
CompSci 308

Unique Variants

A variant of Breakout that I found intriguing was Pinball Breakout. This variant is distinctive because it features not one but two user controls, Pinball flippers and Breakout paddles. These can be controlled independently to create a dynamic experience of changing the ball’s motion in order to break the blocks on the screen. Another aspect that I found interesting was the idea of gravity being implemented into this variant. This implementation maintains the Pinball variant of Breakout and gives the ball’s motion more complexity. In addition, there are bumpers in the variant that have the same roles as the gravity component, to make the user feel like he/she is playing Breakout and Pinball at the same time and to make it harder to predict the motion of the ball as it reflects off of blocks, bumpers, walls, paddles, and flippers. Level Types

For every sequential level that the user encounters, I want the blocks to be closer to the paddle with more blocks to break. This gives the user less time to react when the ball is bouncing off the block because there is less distance to travel when the blocks have a lower position. I also want to implement faster ball movement speed which cuts the time to predict where the ball will be at the paddle’s elevation. This increasing difficulty will surely separate the good from the bad players, and require players to be more skillful at predicting the movement the ball in a quicker and more consistent manner. The general layout of the levels is shown below, where “+” indicates bricks. Higher levels will have higher numbers of bricks located closer to the paddle.|———————————————————————||			|
|+++++++++++++++++++++++|
|+++++++++++++++++++++++|
|			|
|	    .		|
|	   ———		|
|———————————————————————|		
Block Types

A simple block I want to create is a one-hit block. This block will break whenever the ball collides with it. I also want to create a multi-hit block. This block requires more than one hit to break and will change colors every time it is hit. Block colors represent how many hits a block has. For example, a block may start out red and require three hits to break. After being hit once, it may change to blue, signaling that it has two more hits before being broken. Then, after being hit again, it may turn green. In this case, all blocks that require one hit will be green and blocks with two more hits left will be blue.  Another block I need to create is one that drops a power up after being broken. These power ups will automatically be activated after dropping and coming into contact with the paddle. I also want to include permanent blocks (similar to the metal blocks in Breakout that never actually break). These function as obstacles.


Power Ups

A classic power up that I want to implement is one that reduces the ball movement speed allowing the user to predict the motion of the ball more easily and have it bounce off of the paddle. A very simple power up will add an extra life. Another power up will increase the size of the ball so that user and can bounce it off the paddle more easily since the hit-box of the ball would increase. Another power up will create a temporary floor so that the ball will never go out of play during that time.


Paddle Abilities

This section was not included in the Project Plan Specifications but I would like to include it to help me brainstorm my ideas for the paddle abilities. One paddle ability I want to implement is the “catching” paddle. When the ball collides with the paddle, it will stick to it. Then the user can hit the spacebar to release it. This allows the user to reposition the paddle to release the ball at the same angle it came from but at a different location. Another ability will increase the size of the paddle lengthwise. Another ability will allow the paddle to wrap from one side of the screen to the other when it reaches the edge of the screen. Since there are three abilities I want to implement, I plan to enable one ability per level in random order. Thus, by the end of the game, the user will have been able to experience each ability during a level.


Cheat Keys

Some cheat keys I want to include in my game are adding an extra life up to a maximum of three lives (“L”) and increasing/decreasing the paddle size by a set length (toggle “S”). Another cheat key adds/removes a visible protective floor so that the ball never falls out of play (toggle “F”). The most powerful cheat key will clear the board and advance to the previous or next level (“1” or “2”, respectively). If the player is at the last level and “2” is entered, the game winning screen will open. If the user is at the first level and “1” is entered, the game starting screen will open.Something Extra

There are two choices of variants that I want to implement. One includes the Pinball variant where I could add Pinball flippers and bumpers somewhere below the bricks. The other variant includes having a paddle above and below the bricks allowing two players to play the game at the same time while sharing a limited amount of lives. This would be a team game where the goal would be to break all the bricks. In this variant, the ball could fall out of either the top or bottom, so both players must make sure the ball doesn’t miss the paddle. I am not sure which approach to choose from but I am leaning towards the two-player variant.